// Generated by CoffeeScript 1.8.0
(function() {
  var addExclusionRule, onChange, onLoad, originalPassKeys, originalPattern, originalRule, removeExclusionRule, showMessage;

  originalRule = void 0;

  originalPattern = void 0;

  originalPassKeys = void 0;

  onLoad = function() {
    document.getElementById("optionsLink").setAttribute("href", chrome.runtime.getURL("pages/options.html"));
    return chrome.tabs.getSelected(null, function(tab) {
      var domain, isEnabled;
      isEnabled = chrome.extension.getBackgroundPage().isEnabledForUrl({
        url: tab.url
      });
      if (isEnabled.rule) {
        originalRule = isEnabled.rule;
        originalPattern = originalRule.pattern;
        originalPassKeys = originalRule.passKeys;
      } else {
        domain = (tab.url.match(/[^\/]*\/\/[^\/]*\//) || tab.url) + "*";
        originalRule = null;
        originalPattern = domain;
        originalPassKeys = "";
      }
      document.getElementById("popupPattern").value = originalPattern;
      document.getElementById("popupPassKeys").value = originalPassKeys;
      return onChange();
    });
  };

  onChange = function() {
    var passKeys, pattern, popupExclude;
    pattern = document.getElementById("popupPattern").value.trim();
    passKeys = document.getElementById("popupPassKeys").value.trim();
    popupExclude = document.getElementById("popupExclude");
    document.getElementById("popupRemove").disabled = !(originalRule && pattern === originalPattern);
    if (originalRule && pattern === originalPattern && passKeys === originalPassKeys) {
      popupExclude.disabled = true;
      return popupExclude.value = "Update Rule";
    } else if (originalRule && pattern === originalPattern) {
      popupExclude.disabled = false;
      return popupExclude.value = "Update Rule";
    } else if (originalRule) {
      popupExclude.disabled = false;
      return popupExclude.value = "Add Rule";
    } else if (pattern) {
      popupExclude.disabled = false;
      return popupExclude.value = "Add Rule";
    } else {
      popupExclude.disabled = true;
      return popupExclude.value = "Add Rule";
    }
  };

  showMessage = (function() {
    var hideConfirmationMessage, timer;
    timer = null;
    hideConfirmationMessage = function() {
      document.getElementById("confirmationMessage").setAttribute("style", "display: none");
      return timer = null;
    };
    return function(message) {
      document.getElementById("confirmationMessage").setAttribute("style", "display: inline-block");
      document.getElementById("confirmationMessage").innerHTML = message;
      if (timer) {
        clearTimeout(timer);
      }
      return timer = setTimeout(hideConfirmationMessage, 2000);
    };
  })();

  addExclusionRule = function() {
    var passKeys, pattern;
    pattern = document.getElementById("popupPattern").value.trim();
    passKeys = document.getElementById("popupPassKeys").value.trim();
    chrome.extension.getBackgroundPage().addExclusionRule(pattern, passKeys);
    showMessage("Updated.");
    return onLoad();
  };

  removeExclusionRule = function() {
    var pattern;
    pattern = document.getElementById("popupPattern").value.trim();
    chrome.extension.getBackgroundPage().removeExclusionRule(pattern);
    showMessage("Removed.");
    return onLoad();
  };

  document.addEventListener("DOMContentLoaded", function() {
    var event, field, _i, _j, _len, _len1, _ref, _ref1;
    document.getElementById("popupExclude").addEventListener("click", addExclusionRule, false);
    document.getElementById("popupRemove").addEventListener("click", removeExclusionRule, false);
    _ref = ["popupPattern", "popupPassKeys"];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      field = _ref[_i];
      _ref1 = ["keyup", "change"];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        event = _ref1[_j];
        document.getElementById(field).addEventListener(event, onChange, false);
      }
    }
    return onLoad();
  });

}).call(this);
